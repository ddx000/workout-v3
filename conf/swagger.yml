swagger: "2.0"
info:
  description: This is the swagger file that goes with our server code
  version: "1.0.0"
  title: Swagger Rest Article
consumes:
  - application/json
produces:
  - application/json

basePath: /api

# Paths supported by the server application
paths:
  /auth/google_sign_in:
    post:
      tags:
        - Login
      summary: Google OAuth Login callback
      operationId: views.jwt_auth.google_sign_in
      parameters:
        - name: req
          in: body
          description: req
          required: True
          schema:
            type: object
            properties:
              name:
                type: string
                description: req
      responses:
        200:
          description: get a JWT token for google user


  /user/info:
    get:
      operationId: models.users.get_user
      tags:
        - Login
      summary: get user infomation by JWT token
      security:
      - JWT: []
      responses:
        200:
          description: Successfully read user info

  /menu:
    get:
      operationId: models.menu.read_all
      tags:
        - Menu
      summary: Read the entire set of menu of the user, sorted by last name
      security:
      - JWT: []
      description: Read the entire set of menu of the user, sorted by last name
      responses:
        200:
          description: Successfully read menu set operation

    post:
      operationId: models.menu.create
      tags:
        - Menu
      summary: Create a menu
      security:
        - JWT: []
      description: Create a new menu
      parameters:
        - name: menu
          in: body
          description: Menu to create
          required: True
          schema:
            type: object
            properties:
              name:
                type: string
                description: name of menu to create
              plan_time:
                type: string
                format: date
                example: "2019-05-17"
                pattern: \d{4}-\d{2}-\d{2}
                description: plan time of menu to create

      responses:
        201:
          description: Successfully created menu

  /menu/{menu_id}:
    get:
      operationId: models.menu.read_one
      tags:
        - Menu
      summary: Read one menu
      description: Read one menu 2
      parameters:
        - name: menu_id
          in: path
          description: Id of the menu to get
          type: integer
          required: True
      security:
         - JWT: []
      responses:
        200:
          description: Successfully read menu from menu data operation
    put:
      operationId: models.menu.update
      tags:
        - Menu
      summary: Update a menu
      description: Update a new menu 2
      parameters:
        - name: menu_id
          in: path
          description: Id the menu to update
          type: integer
          required: True
        - name: menu
          in: body
          description: Menu to create
          required: True
          schema:
            type: object
            properties:
              name:
                type: string
                description: name of menu to create
      security:
        - JWT: []
      responses:
        200:
          description: Successfully update menu

    delete:
      operationId: models.menu.delete
      tags:
        - Menu
      summary: Delete a menu
      description: Delete a menu
      parameters:
        - name: menu_id
          in: path
          type: integer
          description: Id of the menu to delete
          required: true
      security:
        - JWT: []
      responses:
        200:
          description: Successfully deleted a menu

  /menu/{menu_id}/actions:
    get:
      operationId: models.actions.read_all_actions_in_menu
      tags:
        - Actions
      summary: Get actions associated with a menu
      description: Get actions associated with a menu
      security:
        - JWT: []
      parameters:
        - name: menu_id
          in: path
          description: Id of menu associated with action
          type: integer
          required: True
      responses:
        '200':
          description: OK
  
    post:
      operationId: models.actions.create
      tags:
        - Actions
      summary: Create a action associated with a menu
      description: Create a action associated with a menu
      security:
        - JWT: []
      parameters:
        - name: menu_id
          in: path
          description: Id of menu associated with action
          type: integer
          required: True
        - name: action
          in: body
          description: Text content of the action to create
          required: True
          schema:
            type: object
            properties:
              content:
                type: string
                description: Text of the action to create
      responses:
        201:
          description: Successfully created a action
          schema:
            properties:
              menu_id:
                type: integer
                description: Id of the menu associated with the action
              action_id:
                type: integer
                description: Id of the created action
              content:
                type: string
                description: Text content of the action
              _last_modified:
                type: string
                description: Creation/Update timestamp of the menu record

  /menu/{menu_id}/actions/{action_id}:
    get:
      operationId: models.actions.read_one
      tags:
        - Actions
      summary: Read a particular action associated with a menu
      description: Read a particular action associated with a menu
      security:
        - JWT: []
      parameters:
        - name: menu_id
          in: path
          description: Id of menu associated with action
          type: integer
          required: True
        - name: action_id
          in: path
          description: Id of action
          type: integer
          required: True
      responses:
        200:
          description: Successfully read action for a menu
          schema:
            type: object
            properties:
              action_id:
                type: integer
                description: Id of the action
              menu_id:
                type: integer
                description: Id of the menu action associated with
              content:
                type: string
                description: Text content of the action
              _last_modified:
                type: string
                description: Creation/Update timestamp of the action record
    put:
      operationId: models.actions.update
      tags:
        - Actions
      summary: Update a action
      description: Update a action
      parameters:
        - name: menu_id
          in: path
          description: Id the menu to update
          type: integer
          required: True
        - name: action_id
          in: path
          description: Id the action to update
          type: integer
          required: True
        - name: action
          in: body
          description: action to update
          required: True
          schema:
            type: object
            properties:
              content:
                type: string
                description: action to update
      security:
        - JWT: []
      responses:
        200:
          description: Successfully update action

    delete:
      operationId: models.actions.delete
      tags:
        - Actions
      summary: Delete a action
      description: Delete a action
      parameters:
        - name: menu_id
          in: path
          description: Id the menu to update
          type: integer
          required: True
        - name: action_id
          in: path
          description: Id the action to update
          type: integer
          required: True
      security:
        - JWT: []
      responses:
        200:
          description: Successfully deleted a menu

  /menus/{menu_id}/actions/{action_id}/records:
   get:
      operationId: models.records.read_all_records_in_action
      tags:
        - Records
      summary: Get records associated with an action
      description: Get records associated with an action
      security:
        - JWT: []
      parameters:
        - name: menu_id
          in: path
          description: Id of menu
          type: integer
          required: True
        - name: action_id
          in: path
          description: Id of action
          type: integer
          required: True
      responses:
        '200':
          description: OK

   post:
      operationId: models.records.create
      tags:
        - Records
      summary: Create a record associated with a action
      description: Create a record associated with a action
      security:
        - JWT: []
      parameters:
        - name: menu_id
          in: path
          description: Id of menu
          type: integer
          required: True
        - name: action_id
          in: path
          description: Id of action
          type: integer
          required: True
        - name: record
          in: body
          description: Text content of the record to create
          required: True
          schema:
            type: object
            properties:
              weight:
                type: integer
                description: training weight (kg)
              reps:
                type: integer
                description: repeat times for training
      responses:
        201:
          description: Successfully created a record


  /menus/{menu_id}/actions/{action_id}/records/{record_id}:
    get:
      operationId: models.records.read_one
      tags:
        - Records
      summary: Read a particular record associated with an action
      description: Read a particular record associated with an action
      security:
        - JWT: []
      parameters:
        - name: menu_id
          in: path
          description: Id of menu associated with action
          type: integer
          required: True
        - name: action_id
          in: path
          description: Id of action
          type: integer
          required: True
        - name: record_id
          in: path
          description: Id of record
          type: integer
          required: True
      responses:
        200:
          description: Successfully read record

    put:
      operationId: models.records.update
      tags:
        - Records
      summary: Update a record
      description: Update a record
      parameters:
        - name: menu_id
          in: path
          description: Id of menu associated with action
          type: integer
          required: True
        - name: action_id
          in: path
          description: Id of action
          type: integer
          required: True
        - name: record_id
          in: path
          description: Id of record
          type: integer
          required: True
        - name: record
          in: body
          description: record to update
          required: True
          schema:
            type: object
            properties:
              weight:
                type: integer
                description: training weight (kg)
              reps:
                type: integer
                description: repeat times for training
      security:
        - JWT: []
      responses:
        200:
          description: Successfully update record

    delete:
      operationId: models.records.delete
      tags:
        - Records
      summary: Delete a record
      description: Delete a record
      parameters:
        - name: menu_id
          in: path
          description: Id of menu associated with action
          type: integer
          required: True
        - name: action_id
          in: path
          description: Id of action
          type: integer
          required: True
        - name: record_id
          in: path
          description: Id of record
          type: integer
          required: True
      security:
        - JWT: []
      responses:
        200:
          description: Successfully deleted a record


securityDefinitions:
  JWT:
    type: apiKey
    name: Authorization
    in: header
    x-apikeyInfoFunc: views.jwt_auth.decode_token
